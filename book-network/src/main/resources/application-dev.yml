#spring:
#  datasource:
#    url: jdbc:postgresql://localhost:5432/book_social_network
#    username: postgres
#    password: password
#    driver-class-name: org.postgresql.Driver
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: false
#    properties:
#      hibernate:
#        format_sql: true
#    database: postgresql
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#  mail:
#    host: ${EMAIL_HOST_NAME}
#    port: 465
#    username: ${EMAIL_USER_NAME}
#    password: ${EMAIL_PASSWORD}
#
#    properties:
#      mail:
#        smtp:
#          auth: true
#          ssl:
#            trust: "*"
#            enable: true
#        starttls:
#          enabled: true
#      protocol: smtp
#application:
#  security:
#    jwt:
#      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
#      expiration: 86400000 # a day
#      refresh-token:
#        expiration: 604800000 # 7 days
#  mailing:
#    frontend:
#      activation-url: http://localhost:4200/activate-account
#  file:
#    uploads:
#      photos-output-path: ./uploads
#server:
#  port: 8088

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/book_social_network
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: localhost
    port: 1025
    username: youssefabidi929@gmail.com
    password: qjrh ixii hgqz trss
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost:9090/realms/book-social-network"
application:
  file:
    uploads:
      photos-output-path: ./uploads
server:
  port: 8088